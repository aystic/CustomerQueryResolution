services:
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      - db_mongodb
      - db_mysql
      - socket_server
      - app_server
    networks:
      - appVirtualNetwork
    restart: always

  app_server:
    build:
      context: backend/applicationServer
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    env_file:
      - ./backend/applicationServer/.env.list
    depends_on:
      - db_mongodb
      - db_mysql
      - socket_server
    networks:
      - appVirtualNetwork
    restart: always

  socket_server:
    build:
      context: backend/websocketServer
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./backend/websocketServer/.env.list
    depends_on:
      db_mongodb:
        condition: service_started
      db_mysql:
        condition: service_healthy
    networks:
      - appVirtualNetwork
    restart: always
    # performs data migration on mysql db
    command: ./docker-entrypoint.sh

  db_mysql:
    build:
      context: db
      dockerfile: Dockerfile.mysql
    volumes:
      - mysqlData:/var/lib/mysql:rw
    networks:
      - appVirtualNetwork
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ppass"]
      interval: 5s
      timeout: 5s
      retries: 20

  db_mongodb:
    build:
      context: db
      dockerfile: Dockerfile.mongo
    volumes:
      - mongoData:/data/db:rw
    networks:
      - appVirtualNetwork
    restart: always

networks:
  appVirtualNetwork: {}

volumes:
  mysqlData:
  mongoData:
